#lang racket

(define (make-counter-ex4 initial-count)

  (let ((counter initial-count))
 
    (define (count-up)
      (set! counter (+ counter 1))
      counter)
 
    (define (count-down)
      (if (> counter 0)
          (begin (set! counter (- counter 1))
                 counter)
          "Counter is 0"))


    (lambda(cmd)
      (cond ((eq? cmd 'inc) count-up)
            ((eq? cmd 'dec) count-down)
            (else (error "Unknown command:" cmd))))
    ))

(display "(define ex4 (make-counter-ex4 0))")
(define ex4 (make-counter-ex4 0))
(newline)

(display "((ex4 'inc)): ")
((ex4 'inc))
(newline)
(display "((ex4 'inc)): ")
((ex4 'inc))
(newline)
(display "((ex4 'dec)): ")
((ex4 'dec))
(newline)
(display "((ex4 'dec)): ")
((ex4 'dec))
(newline)
(display "((ex4 'dec)): ")
((ex4 'dec))
(newline)

(define (make-counter-ex5 initial-count)

  (let ((counter initial-count))
 
    (define (count-up)
      (set! counter (+ counter 1))
      counter)
 
    (define (count-down)
      (if (> counter 0)
          (begin (set! counter (- counter 1))
                 counter)
          "Counter is 0"))

    (define (get) counter)

    (define (reset) (set! counter 0) counter)


    (lambda(cmd)
      (cond ((eq? cmd 'inc) count-up)
            ((eq? cmd 'dec) count-down)
            ((eq? cmd 'get) get)
            ((eq? cmd 'reset) reset)
            (else (error "Unknown command:" cmd))))
    ))

(display "(define ex5 (make-counter-ex5 0))")
(define ex5 (make-counter-ex5 0))
(newline)

(display "((ex5 'inc)): ")
((ex5 'inc))
(newline)
(display "((ex5 'inc)): ")
((ex5 'inc))
(newline)
(display "((ex5 'dec)): ")
((ex5 'dec))
(newline)
(display "((ex5 'get)): ")
((ex5 'get))
(newline)
(display "((ex5 'dec)): ")
((ex5 'dec))
(newline)
(display "((ex5 'dec)): ")
((ex5 'dec))
(newline)
(display "((ex5 'reset)): ")
((ex5 'reset))
(newline)
(display "((ex5 'inc)): ")
((ex5 'inc))
(newline)

(define (make-counter-ex6 initial-count step)

  (let ((counter initial-count))
 
    (define (count-up)
      (set! counter (+ counter step))
      counter)
 
    (define (count-down)
      (if (> counter 0)
          (begin (set! counter (- counter 1))
                 counter)
          "Counter is 0"))

    (define (get) counter)

    (define (reset) (set! counter 0) counter)


    (lambda(cmd)
      (cond ((eq? cmd 'inc) count-up)
            ((eq? cmd 'dec) count-down)
            ((eq? cmd 'get) get)
            ((eq? cmd 'reset) reset)
            (else (error "Unknown command:" cmd))))
    ))

(display "(define ex6 (make-counter-ex6 0 5))")
(define ex6 (make-counter-ex6 0 5))
(newline)

(display "((ex6 'get))")
((ex6 'get))
(newline)
(display "((ex6 'inc)): ")
((ex6 'inc))
(newline)
(display "((ex6 'inc)): ")
((ex6 'inc))
(newline)
(display "((ex6 'dec)): ")
((ex6 'dec))
(newline)
(display "((ex6 'inc))")
((ex6 'inc))
(newline)
(display "((ex6 'reset)): ")
((ex6 'reset))
(newline)

(define (make-counter-ex7 initial-count step)

  (let ([ counter initial-count ]
        [maxx initial-count])
 
    (define (count-up)
      (set! counter (+ counter step))
      (when (> counter maxx) (set! maxx counter))
      counter)
 
    (define (count-down)
      (if (> counter 0)
          (begin (set! counter (- counter 1))
                 counter)
          "Counter is 0"))

    (define (get) counter)

    (define (reset) (set! counter 0) (set! maxx 0) counter)

    (define (get-max) maxx)

    (lambda(cmd)
      (cond ((eq? cmd 'inc) count-up)
            ((eq? cmd 'dec) count-down)
            ((eq? cmd 'get) get)
            ((eq? cmd 'max) get-max)
            ((eq? cmd 'reset) reset)
            (else (error "Unknown command:" cmd))))
    ))

(display "(define ex7 (make-counter-ex7 0 2))")
(define ex7 (make-counter-ex7 0 2))
(newline)
(display "((ex7 'inc)): ")
((ex7 'inc))
(newline)
(display "((ex7 'inc)): ")
((ex7 'inc))
(newline)
(display "((ex7 'max)): ")
((ex7 'max))
(newline)
(display "((ex7 'inc)): ")
((ex7 'inc))
(newline)
(display "((ex7 'max)): ")
((ex7 'max))
(newline)
(display "((ex7 'dec)): ")
((ex7 'dec))
(newline)
(display "((ex7 'dec)): ")
((ex7 'dec))
(newline)
(display "((ex7 'max)): ")
((ex7 'max))
(newline)
(display "((ex7 'reset)): ")
((ex7 'reset))
(newline)
(display "((ex7 'max)): ")
((ex7 'max))
(newline)
